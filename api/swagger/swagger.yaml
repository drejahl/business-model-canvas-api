swagger: "2.0"
info:
  version: "0.0.1"
  title: Business Model Canvas API
host: localhost:80
basePath: /v1
#
schemes:
  - http
  - https
#securityDefinitions:
#  Bearer:
#    type: apiKey
#    name: Authorization
#    in: header
consumes:
  - application/json
produces:
  - application/json
paths:
  /check:
    x-swagger-router-controller: businessModelCanvas
    get:
#      security:
#        - Bearer: []
      description: Returns an array of canvases
      operationId: check
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Check"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /businessModelCanvas:
    x-swagger-router-controller: businessModelCanvas
    post:
      tags:
        - BusinessModelCanvas
      operationId: canvasCreate
      summary: canvasCreate
      description: ''
      deprecated: false
      parameters:
        - name: canvas
          in: body
          required: true
          schema:
            $ref: '#/definitions/BusinessModelCanvas'
      responses:
        '201':
          description: BusinessModelCanvas
          schema:
            $ref: '#/definitions/BusinessModelCanvas'
    get:
#      security:
#        - Bearer: []
      description: Returns an array of canvases
      operationId: canvasFind
      parameters:
        - name: fields
          in: query
          required: false
          description: ''
          type: string
        - name: page
          in: query
          required: false
          description: ''
          type: integer
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BusinessModelCanvas"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  Check:
    type: string
  BusinessModelCanvas:
    properties:
      id:
        type: string
      name:
        type: string
      customerSegments:
        type: array
        items:
          $ref: "#/definitions/CustomerSegment"
  CustomerSegment:
    properties:
      id:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
